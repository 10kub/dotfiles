// Documentation at https://www.sublimetext.com/docs/color_schemes.html
{
  "variables":
  {
    "fg-from-original": "#000000",
    "grey-custom": "#57606a"
  },
  "globals":
  {
    "brackets_options": "glow",
    "highlight": "#CB9000",
    "caret": "var(active)",
    "line_highlight": "#e6e6e6",
    "selection_border_width": "2",
    "selection_corner_radius": "3",
  },
  "rules":
  [

    {
      "scope": "variable",
      "foreground": "var(fg-from-original)"
    },
    {
      "name": "Don't highlight regex in string",
      "scope": "string.quoted keyword.control.anchor.regexp, string.quoted keyword.operator.or.regexp, string.quoted keyword.operator.negation.regexp, string.quoted keyword.operator.quantifier.regexp, string.quoted constant.character.character-class.regexp, string.quoted constant.other.character-class.set.regexp, string.quoted meta.assertion.look-behind.regexp, string.quoted meta.assertion.look-ahead.regexp, string.quoted meta.assertion.no-capture-group.regexp, string.quoted punctuation.definition.group, string.quoted punctuation.definition.string.regex-delimiter, string.quoted punctuation.definition.character-class",
      "foreground": "var(green)",
    },
    {
      "name": "Don't highlight sql in string",
      "scope": "source.sql.embedded, source.sql.embedded keyword, source.sql.embedded keyword.operator, source.sql.embedded keyword.operator.assignment, source.sql.embedded keyword.operator.word, source.sql.embedded keyword.operator.logical, source.sql.embedded storage, source.sql.embedded storage.type, source.sql.embedded constant, source.sql.embedded constant.other, source.sql.embedded constant.numeric, source.sql.embedded punctuation.separator",
      "foreground": "var(green)"
    },
    {
      "name": "String quoted",
      "scope": "punctuation.definition.string",
      "foreground": "var(green)"
    },

    {
      "name":       "Escapes",
      "scope":      "constant.character.escape, constant.other.placeholder",
      "foreground": "var(magenta)"
    },

    {
      "scope": "constant.numeric.line-number.match",
      "foreground": "var(red)"
    },
    {
      "name": "markup code",
      "scope": "markup.raw",
      "background": "color(var(selection) alpha(0.20))",
    },
    {
      "name": "markup code",
      "scope": "markup.raw.inline",
      "background": "color(var(selection) alpha(0.20))",
    },
    {
      "name": "YAML Key",
      "scope": "entity.name.tag.yaml",
      "foreground": "var(blue)"
    },
    {
      "name": "YAML String",
      "scope": "source.yaml string.unquoted",
      "foreground": "var(fg-from-original)"
    },

    // TODO: check colors for languages keywords (fix types)
    {
      "name":       "Keyword logical",
      "scope":      "keyword.operator.logical",
      "foreground": "var(grey)"
    },
    {
      "name": "Operator assignment",
      "scope": "keyword.operator.assignment",
      "foreground": "var(grey)",
    },

    {
      "name": "Keyword",
      "scope": "keyword - keyword.operator, keyword.operator.word",
      "foreground": "var(grey-custom)",
    },
    {
      "name": "Storage",
      "scope": "storage",
      "foreground": "var(grey-custom)",
    },
    {
      "name": "Library function",
      "scope": "support.function, support.macro",
      "foreground": "var(grey-custom)",
      // "font_style": "italic",
    },
    {
      "name": "Library constant",
      "scope": "support.constant",
      // "foreground": "var(grey-custom)",
      "foreground": "var(magenta)",
    },
  ]
}
